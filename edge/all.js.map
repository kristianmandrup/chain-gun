{"version":3,"sources":["all.js"],"names":["add","Gun","allNames","chains","addCount","addDate","addEach","addFields","addPrint","addTimed","addLocal","addMapReduce","addNo","addPut","addRecurse","addSet","addSoul","addValue","capitalize","str","charAt","toUpperCase","slice","names","forEach","nameCap","name","fun","chain"],"mappings":";;;;;;QAqCgBA,G,GAAAA,G;;kBAwCD,UAAUC,GAAV,EAAe;AAC1B,WAAOD,sBAAIC,GAAJ,SAAYC,QAAZ,EAAP;AACH,C;;AA/ED;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAMC,SAAS;AACXC,6BADW;AAEXC,0BAFW;AAGXC,0BAHW;AAIXC,gCAJW;AAKXC,6BALW;AAMXC,6BANW;AAOXC,6BAPW;AAQXC,yCARW;AASXC,oBATW;AAUXC,uBAVW;AAWXC,mCAXW;AAYXC,uBAZW;AAaXC,0BAbW;AAcXC;AAdW,CAAf;;AAiBA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACrB,WAAOA,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,KAAJ,CAAU,CAAV,CAArC;AACH;;AAEM,SAAStB,GAAT,CAAaC,GAAb,EAA4B;AAAA,sCAAPsB,KAAO;AAAPA,aAAO;AAAA;;AAC/BA,UAAMC,OAAN,CAAc,gBAAQ;AAClB,YAAIC,UAAUP,WAAWQ,IAAX,CAAd;AACA,YAAIC,MAAM,QAAQF,OAAlB;AACAtB,eAAOwB,GAAP,EAAY;AACRC,mBAAO3B,IAAI2B,KADH;AAER3B;AAFQ,SAAZ;AAIH,KAPD;AAQA,WAAOA,GAAP;AACH;;AAED,IAAMC,WAAW,CACb,OADa,EAEb,MAFa,EAGb,MAHa,EAIb,QAJa,EAKb,OALa,EAMb,OANa,EAOb,OAPa,EAQb,WARa,EASb,IATa,EAUb,KAVa,EAWb,SAXa,EAYb,KAZa,EAab,MAba,EAcb,OAda,CAAjB;;QAkBIG,O;QACAC,O;QACAE,Q;QACAE,Q;QACAG,M;QACAC,U;QACAC,M;QACAE,Q","file":"all.js","sourcesContent":["import {addCount} from './count'\nimport {addDate} from './date'\nimport {addEach} from './each'\nimport {addFields} from './fields'\nimport {addPrint} from './print'\nimport {addTimed} from './timed'\nimport {addLocal} from './local'\nimport {addMapReduce} from './map-reduce'\nimport {addNo} from './no'\nimport {addRecurse} from './recurse'\nimport {addPut} from './put'\nimport {addSet} from './set'\nimport {addSoul} from './soul'\nimport {addValue} from './value'\n\n\nconst chains = {\n    addCount,\n    addDate,\n    addEach,\n    addFields,\n    addPrint,\n    addTimed,\n    addLocal,\n    addMapReduce,\n    addNo,\n    addPut,\n    addRecurse,\n    addSet,\n    addSoul,\n    addValue\n}\n\nfunction capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function add(Gun, ...names) {\n    names.forEach(name => {\n        let nameCap = capitalize(name)\n        let fun = 'add' + nameCap\n        chains[fun]({\n            chain: Gun.chain,\n            Gun\n        })\n    })\n    return Gun\n}\n\nconst allNames = [\n    'count',\n    'date',\n    'each',\n    'fields',\n    'print',\n    'timed',\n    'local',\n    'mapReduce',\n    'no',\n    'put',\n    'recurse',\n    'set',\n    'soul',\n    'value'\n]\n\nexport {\n    addDate,\n    addEach,\n    addPrint,\n    addLocal,\n    addPut,\n    addRecurse,\n    addSet,\n    addValue\n}\n\nexport default function (Gun) {\n    return add(Gun, ...allNames)\n}"]}