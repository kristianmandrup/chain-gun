{"version":3,"sources":["all.js"],"names":["add","Gun","allNames","chains","addPromise","addObservable","addCsp","addCount","addDate","addEach","addFields","addPrint","addLive","addTimed","addLocal","addMapReduce","addNo","addPut","addRecurse","addSet","addSoul","addValue","capitalize","str","charAt","toUpperCase","slice","names","forEach","nameCap","name","fun","chain"],"mappings":";;;;;;QAoFgBA,G,GAAAA,G;;kBAuDD,UAAUC,GAAV,EAAe;AAC5B,SAAOD,sBAAIC,GAAJ,SAAYC,QAAZ,EAAP;AACD,C;;AA7ID;;;;AACA;;;;AACA;;AAGA;;AAGA;;AAGA;;AAKA;;AAMA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAMA;;AAGA;;AAGA;;AAGA;;AAGA;;;;AAzCA;;AA6CA,IAAMC,SAAS;AACbC,+BADa;AAEbC,qCAFa;AAGbC,qBAHa;AAIbC,2BAJa;AAKbC,wBALa;AAMbC,wBANa;AAObC,8BAPa;AAQbC,2BARa;AASbC,wBATa;AAUbC,2BAVa;AAWbC,2BAXa;AAYbC,uCAZa;AAabC,kBAba;AAcbC,qBAda;AAebC,iCAfa;AAgBbC,qBAhBa;AAiBbC,wBAjBa;AAkBbC;AAlBa,CAAf;AAnBA;AACA;AACA;;AAvBA;AACA;AACA;;;AA2DA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOA,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,KAAJ,CAAU,CAAV,CAArC;AACD;;AAEM,SAAS1B,GAAT,CAAaC,GAAb,EAA4B;AAAA,oCAAP0B,KAAO;AAAPA,SAAO;AAAA;;AACjCA,QAAMC,OAAN,CAAc,gBAAQ;AACpB,QAAIC,UAAUP,WAAWQ,IAAX,CAAd;AACA,QAAIC,MAAM,QAAQF,OAAlB;AACA1B,WAAO4B,GAAP,EAAY;AACVC,aAAO/B,IAAI+B,KADD;AAEV/B;AAFU,KAAZ;AAID,GAPD;AAQA,SAAOA,GAAP;AACD;;AAED,IAAMC,WAAW,CACf,SADe,EAEf,YAFe,EAGf,KAHe,EAIf,MAJe,EAKf,MALe,EAMf,QANe;AAOf;AACA,OARe,EASf,MATe,EAUf,OAVe,EAWf,OAXe,EAYf,WAZe,EAaf,IAbe;AAcf;AACA,KAfe,EAgBf,SAhBe,EAiBf,KAjBe,EAkBf,MAlBe,EAmBf,OAnBe,CAAjB;;QAuBEE,U;QACAC,a;QACAC,M;QACAE,O;QACAC,O;QACAC,S;QAEAC,Q;QACAC,O;QACAC,Q;QACAC,Q;QACAC,Y;QACAC,K;QAEAC,M;QACAC,U;QACAC,M;QACAE,Q","file":"all.js","sourcesContent":["import addPromise from './promise'\nimport addObservable from './observable'\nimport {\n  addCsp\n} from './channel/csp'\nimport {\n  addCount\n} from './count'\nimport {\n  addDate\n} from './date'\nimport {\n  addEach\n} from './each'\n// import { addEdge } from './edge'\n\nimport {\n  addFields\n} from './fields'\n// import {\n//   addFilter\n// } from './filter'\nimport {\n  addPrint\n} from './print'\nimport {\n  addLive\n} from './live'\nimport {\n  addTimed\n} from './timed'\nimport {\n  addLocal\n} from './local'\nimport {\n  addMapReduce\n} from './map-reduce'\nimport {\n  addNo\n} from './no'\n// import {\n//   addOut\n// } from './out'\nimport {\n  addRecurse\n} from './recurse'\nimport {\n  addPut\n} from './put'\nimport {\n  addSet\n} from './set'\nimport {\n  addSoul\n} from './soul'\nimport {\n  addValue\n} from './value'\n\nconst chains = {\n  addPromise,\n  addObservable,\n  addCsp,\n  addCount,\n  addDate,\n  addEach,\n  addFields,\n  addPrint,\n  addLive,\n  addTimed,\n  addLocal,\n  addMapReduce,\n  addNo,\n  addPut,\n  addRecurse,\n  addSet,\n  addSoul,\n  addValue\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function add(Gun, ...names) {\n  names.forEach(name => {\n    let nameCap = capitalize(name)\n    let fun = 'add' + nameCap\n    chains[fun]({\n      chain: Gun.chain,\n      Gun\n    })\n  })\n  return Gun\n}\n\nconst allNames = [\n  'promise',\n  'observable',\n  'csp',\n  'date',\n  'each',\n  'fields',\n  // 'filter',\n  'print',\n  'live',\n  'timed',\n  'local',\n  'mapReduce',\n  'no',\n  // 'out',\n  'put',\n  'recurse',\n  'set',\n  'soul',\n  'value'\n]\n\nexport {\n  addPromise,\n  addObservable,\n  addCsp,\n  addDate,\n  addEach,\n  addFields,\n  // addFilter,\n  addPrint,\n  addLive,\n  addTimed,\n  addLocal,\n  addMapReduce,\n  addNo,\n  // addOut,\n  addPut,\n  addRecurse,\n  addSet,\n  addValue\n}\n\nexport default function (Gun) {\n  return add(Gun, ...allNames)\n}"]}