{"version":3,"sources":["all.js"],"names":["add","Gun","allNames","chains","addCount","addDate","addEach","addFields","addPrint","addLive","addTimed","addLocal","addMapReduce","addNo","addPut","addRecurse","addSet","addSoul","addValue","capitalize","str","charAt","toUpperCase","slice","names","forEach","nameCap","name","fun","chain"],"mappings":";;;;;;QAqEgBA,G,GAAAA,G;;kBAyCD,UAAUC,GAAV,EAAe;AAC5B,SAAOD,sBAAIC,GAAJ,SAAYC,QAAZ,EAAP;AACD,C;;AAhHD;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAKA,IAAMC,SAAS;AACbC,2BADa;AAEbC,wBAFa;AAGbC,wBAHa;AAIbC,8BAJa;AAKbC,2BALa;AAMbC,wBANa;AAObC,2BAPa;AAQbC,2BARa;AASbC,uCATa;AAUbC,kBAVa;AAWbC,qBAXa;AAYbC,iCAZa;AAabC,qBAba;AAcbC,wBAda;AAebC;AAfa,CAAf;;AAkBA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOA,IAAIC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,IAAIG,KAAJ,CAAU,CAAV,CAArC;AACD;;AAEM,SAASvB,GAAT,CAAaC,GAAb,EAA4B;AAAA,oCAAPuB,KAAO;AAAPA,SAAO;AAAA;;AACjCA,QAAMC,OAAN,CAAc,gBAAQ;AACpB,QAAIC,UAAUP,WAAWQ,IAAX,CAAd;AACA,QAAIC,MAAM,QAAQF,OAAlB;AACAvB,WAAOyB,GAAP,EAAY;AACVC,aAAO5B,IAAI4B,KADD;AAEV5B;AAFU,KAAZ;AAID,GAPD;AAQA,SAAOA,GAAP;AACD;;AAED,IAAMC,WAAW,CACf,OADe,EAEf,MAFe,EAGf,MAHe,EAIf,QAJe,EAKf,OALe,EAMf,MANe,EAOf,OAPe,EAQf,OARe,EASf,WATe,EAUf,IAVe,EAWf,KAXe,EAYf,SAZe,EAaf,KAbe,EAcf,MAde,EAef,OAfe,CAAjB;;QAmBEG,O;QACAC,O;QACAE,Q;QACAG,Q;QACAG,M;QACAC,U;QACAC,M;QACAE,Q","file":"all.js","sourcesContent":["import {\n  addCount\n} from './count'\nimport {\n  addDate\n} from './date'\nimport {\n  addEach\n} from './each'\nimport {\n  addFields\n} from './fields'\nimport {\n  addPrint\n} from './print'\nimport {\n  addLive\n} from './live'\nimport {\n  addTimed\n} from './timed'\nimport {\n  addLocal\n} from './local'\nimport {\n  addMapReduce\n} from './map-reduce'\nimport {\n  addNo\n} from './no'\nimport {\n  addRecurse\n} from './recurse'\nimport {\n  addPut\n} from './put'\nimport {\n  addSet\n} from './set'\nimport {\n  addSoul\n} from './soul'\nimport {\n  addValue\n} from './value'\n\n\nconst chains = {\n  addCount,\n  addDate,\n  addEach,\n  addFields,\n  addPrint,\n  addLive,\n  addTimed,\n  addLocal,\n  addMapReduce,\n  addNo,\n  addPut,\n  addRecurse,\n  addSet,\n  addSoul,\n  addValue\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function add(Gun, ...names) {\n  names.forEach(name => {\n    let nameCap = capitalize(name)\n    let fun = 'add' + nameCap\n    chains[fun]({\n      chain: Gun.chain,\n      Gun\n    })\n  })\n  return Gun\n}\n\nconst allNames = [\n  'count',\n  'date',\n  'each',\n  'fields',\n  'print',\n  'live',\n  'timed',\n  'local',\n  'mapReduce',\n  'no',\n  'put',\n  'recurse',\n  'set',\n  'soul',\n  'value'\n]\n\nexport {\n  addDate,\n  addEach,\n  addPrint,\n  addLocal,\n  addPut,\n  addRecurse,\n  addSet,\n  addValue\n}\n\nexport default function (Gun) {\n  return add(Gun, ...allNames)\n}"]}