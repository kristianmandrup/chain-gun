{"version":3,"sources":["set.js"],"names":["setAt","addSet","node","at","cb","opt","pathNode","path","set","Error","chain"],"mappings":";;;;;QAAgBA,K,GAAAA,K;QASAC,M,GAAAA,M;AATT,SAASD,KAAT,CAAeE,IAAf,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,GAA7B,EAAkC;AACvC,MAAIC,WAAWJ,KAAKK,IAAL,CAAUJ,EAAV,CAAf;AACA,MAAIG,QAAJ,EAAc;AACZA,aAASE,GAAT,CAAaJ,EAAb,EAAiBC,GAAjB;AACD,GAFD,MAEO;AACL,UAAM,IAAII,KAAJ,mBAA0BN,EAA1B,CAAN;AACD;AACF;;AAEM,SAASF,MAAT,OAEJ;AAAA,MADDS,KACC,QADDA,KACC;;AACDA,QAAMV,KAAN,GAAc,UAAUI,EAAV,EAAcC,GAAd,EAAmB;AAC/B,WAAOL,MAAM,IAAN,EAAYI,EAAZ,EAAgBC,GAAhB,CAAP;AACD,GAFD;AAGA,SAAOK,KAAP;AACD","file":"set.js","sourcesContent":["export function setAt(node, at, cb, opt) {\n  let pathNode = node.path(at)\n  if (pathNode) {\n    pathNode.set(cb, opt)\n  } else {\n    throw new Error(`No such path ${at}`)\n  }\n}\n\nexport function addSet({\n  chain\n}) {\n  chain.setAt = function (cb, opt) {\n    return setAt(this, cb, opt)\n  }\n  return chain\n}"]}