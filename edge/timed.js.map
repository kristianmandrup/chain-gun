{"version":3,"sources":["timed.js"],"names":["timed","addTimed","node","opts","id","name","val","soul","data","console","log","logging","args","cb","recurseTimed","nextObj","nextOpts","stopCondition","operation","interval","num","maxNum","defaultStop","defaultNextObj","defaultNextOpts","defaultOp","obj","put","setTimeout","error","process","exit","chain"],"mappings":"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","file":"timed.js","sourcesContent":["import Gun from 'gun/gun';\n\nexport function timed(node, opts = {}) {\n  let id, name\n  node.val(data => {\n    id = Gun.node.soul(data)\n    name = opts.name || id || 'unknown'\n  })\n\n  console.log('TIMED', opts)\n\n  const log = function (...args) {\n    if (opts.log || opts.logging) {\n      console.log('timed:', name, ...args)\n    }\n  }\n\n  if (typeof opts === 'function') {\n    opts = {\n      cb: opts\n    }\n  }\n\n  recurseTimed(opts)\n\n  function recurseTimed(opts) {\n\n    let {\n      cb,\n      nextObj,\n      nextOpts,\n      stopCondition,\n      operation,\n      logging,\n      interval = 100,\n      num = 0,\n      maxNum = 10\n    } = opts\n\n    let defaultStop = ({\n      num\n    }, opts) => {\n      return num > maxNum\n    }\n    let defaultNextObj = (num, opts) => {\n      return {\n        num: num + 1\n      }\n    }\n\n    let defaultNextOpts = (opts, num) => {\n      return Object.assign(opts, {\n        num\n      })\n    }\n\n    let defaultOp = (node, obj, opts) => {\n      log('put', obj)\n      node.put(obj)\n    }\n\n    nextObj = nextObj || defaultNextObj\n    nextOpts = nextOpts || defaultNextOpts\n    stopCondition = stopCondition || defaultStop\n    operation = operation || defaultOp\n\n    setTimeout(() => {\n      let obj = Object.assign(nextObj(num, opts))\n      operation(node, obj, opts)\n      if (stopCondition(obj, opts)) {\n        if (cb) {\n          cb(num)\n        } else {\n          console.error('timed: Missing cb to stop', opts)\n          process.exit(1)\n        }\n      }\n\n      recurseTimed(nextOpts(opts, obj.num))\n    }, interval)\n  }\n}\n\nexport function addTimed({\n  chain\n}) {\n  chain.timed = function (opts) {\n    return timed(this, opts)\n  }\n  return chain\n}"]}